services:
  webui-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=myapp_db
      - POSTGRES_USER=myapp_user
      - POSTGRES_PASSWORD=myapp_pass
    ports:
      - "5431:5431"
    command: -p 5431
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myapp_user -d myapp_db -p 5431" ]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: always

  bedrock-gateway:
    build:
      context: ./src
      dockerfile: Dockerfile_ecs
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_REGION=us-east-1
      - DEBUG=true
    ports:
      - "8081:80"
    networks:
      - app-network
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped

  open-webui:
    image: ghcr.io/open-webui/open-webui:0.3.10
    container_name: open-webui
    depends_on:
      - webui-db
      - bedrock-gateway
    ports:
      - 3002:8080
    environment:
      - 'OLLAMA_BASE_URL=http://host.docker.internal:11434'
      - 'WEBUI_SECRET_KEY='
      - 'WEBUI_DB_HOST=webui-db'
      - 'DATABASE_URL=postgresql://myapp_user:myapp_pass@webui-db:5431/myapp_db'
      - 'OPENAI_API_BASE_URL=http://bedrock-gateway/api/v1'
      - 'OPENAI_API_KEY=bedrock'
      - 'AIOHTTP_CLIENT_TIMEOUT_OPENAI_MODEL_LIST=600'
    networks:
      - app-network
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped

volumes:
  postgres_data: {}
  ollama: {}
  open-webui: {}

networks:
  app-network:
    driver: bridge